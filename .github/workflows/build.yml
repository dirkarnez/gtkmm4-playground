name: msys2-gtkmm4-action-workflow
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
      - 'c*'
    paths-ignore:
      - '**/README.md'
      
permissions:
    contents: write

jobs:
  build:
    strategy:
      matrix:
        include:
          - { sys: mingw64, env: x86_64 }       # - { sys: mingw32, env: i686 } - { sys: ucrt64,  env: ucrt-x86_64 } - { sys: clang64, env: clang-x86_64 }
    runs-on: windows-latest
    env:
      installation_path: installation
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: actions/checkout@v4

      - id: msys2
        uses: msys2/setup-msys2@v2
        with:
          msystem: ${{matrix.sys}}
          update: true
          install: >-
            curl
            git
            mingw-w64-${{matrix.env}}-gtk4
            mingw-w64-${{matrix.env}}-gtkmm-4.0
            mingw-w64-${{matrix.env}}-glibmm-2.68
            mingw-w64-${{matrix.env}}-cairomm-1.16
            mingw-w64-${{matrix.env}}-pangomm-2.48
            mingw-w64-${{matrix.env}}-glib2
            mingw-w64-${{matrix.env}}-pango
            mingw-w64-${{matrix.env}}-cairo
            mingw-w64-${{matrix.env}}-libsigc++-3.0
            mingw-w64-${{matrix.env}}-gdk-pixbuf2
            mingw-w64-${{matrix.env}}-graphene
            mingw-w64-${{matrix.env}}-gcc
            mingw-w64-${{matrix.env}}-toolchain
            mingw-w64-${{matrix.env}}-openssl
            mingw-w64-${{matrix.env}}-ca-certificates
            mingw-w64-${{matrix.env}}-pkg-config
            base-devel
            










            
      - run: |
          mkdir -pv "${{ env.installation_path }}" && \
          g++ -std=c++17 $(pkg-config gtkmm-4.0 --cflags --libs | sed 's/ -I/ -isystem /g') -o ./${{ env.installation_path }}/hello-world-gtkmm.exe main.cpp
          
      - run: |
          ls -R

      - name: Build
        id: build
        run: |
          export PATH="/mingw64/bin:$PATH"

          out=$(realpath "${{ env.installation_path }}")
    
          # copyDLLs copies all required DLLs of the given binaries to the
          # result directory.
          copyDLLs() {
            ldd "$@" \
              | { grep "=> /mingw64/bin/" || true; } \
              | cut -d ' ' -f1 \
              | xargs -I{} cp /mingw64/bin/{} $out/
          }
    
          # Copy all of the binary's dependencies to the result directory.
          copyDLLs "$out/hello-world-gtkmm.exe"
    
          # countDLLs returns the number of DLLs in the result directory.
          # We use this to recursively copy dependencies until no new DLLs are
          # found.
          countDLLs() {
            find $out -type f -name "*.dll" | wc -l
          }
    
          # Copy DLLs recursively until no new ones are found.
          currentCount=$(countDLLs)
          while true; do
            copyDLLs $out/*.dll
    
            newCount=$(countDLLs)
            (( newCount == currentCount )) && break
            currentCount=$newCount
          done
    
          # Copy the RSVG and GDBus stuff.
          cp \
            /mingw64/bin/librsvg*.dll \
            /mingw64/bin/gdbus.exe \
            $out
    
          # Copy the GLib schemas and GTK resources.
          (
            cd /mingw64
            cp --parents -r \
              share/glib-2.0/schemas/gschemas.compiled \
              share/gtk-4.0 \
              share/icons \
              lib/gdk-pixbuf-2.0 \
              $out
          )
      - name: Archive Release
        uses: thedoctor0/zip-release@master
        with:
          type: 'zip'
          directory: "${{ env.installation_path }}"
          filename: "${{ github.event.repository.name }}-${{ github.ref_name }}-${{ matrix.sys }}-${{matrix.env}}.zip"
          
      - name: Release prebuilt
        uses: ncipollo/release-action@v1
        with:
          artifacts: "${{ env.installation_path }}/${{ github.event.repository.name }}-${{ github.ref_name }}-${{ matrix.sys }}-${{matrix.env}}.zip"
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}
